<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>SocketIO - teste</title>
  <script src="/socket.io/socket.io.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.27.0/moment-with-locales.min.js"></script>
</head>
<body>
  <h1>Webchat</h1>
  <h2>Digite seu Nickname</h2>
  <input
    data-testid="nickname-box"
    type="text"
    id="textNickname"
    placeholder="Insira seu nome aqui"
  >
  <button id="sendNickname" data-testid="nickname-button">
    Logar
  </button>
  
  <h2>Usu√°rios</h2>
  <ul id="displayNickname"> 
  </ul>
  
  <h2>Chitchat</h2>
  <ul id='displayMessage'></ul>
  
  <input
    data-testid="message-box"
    type="text"
    id="textMessage"
    placeholder="Digite uma nova mensagem aqui"
  >
  <button id="sendMessage" data-testid="send-button">
    Enviar
  </button>
  
  <script>
  const socket = io();

  const generateRandomNick = () => {
    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    let randomNick = '';
    for (let i = 0; i < 16; i += 1) {
        randomNick += characters[Math.floor(Math.random() * characters.length)];
    }
    return randomNick;
  };

  let nickname; 
  
  socket.on('connect', () => {
    nickname = generateRandomNick();
    socket.emit('connectedUser', nickname);
    console.log(`${nickname}`);
  });
 
  const buttonSendMsg = document.querySelector('#sendMessage');
  const textMessage = document.querySelector('#textMessage');
  const displayMessage = document.querySelector('#displayMessage');
   
  const buttonSendNick = document.querySelector('#sendNickname');   
  const textNickname = document.querySelector('#textNickname');
  const displayNickname =  document.querySelector('#displayNickname');

  const renderMessages = (message) => {
    const msgItem = document.createElement('li');
    msgItem.innerHTML = message;
    msgItem.setAttribute('data-testid','message');
    displayMessage.append(msgItem);
  }

  buttonSendMsg.addEventListener('click', (event) => {
    event.preventDefault();
    const chatMessage = textMessage.value;

    socket.emit('message', {chatMessage, nickname});
    console.log('message from front: ', {chatMessage, nickname});
    textMessage.value = '';
    textNickname.value = '';
  });

  buttonSendNick.addEventListener('click', (event) => {
    event.preventDefault();
    nickname = textNickname.value;

    socket.emit('updatedUser', nickname);
  });

  socket.on('message', (message) => {
    renderMessages(message);
  });

  socket.on('nickname', (arrayUsers) => {
    const nickItem = document.createElement('li');
    displayNickname.innerHTML = '';
    arrayUsers.forEach( user => {
      nickItem.innerHTML = user.nickname;
      nickItem.setAttribute('data-testid', 'online-user');
      displayNickname.appendChild(nickItem); 
    });
  });
  </script>
</body>
</html>