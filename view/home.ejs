<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>SocketIO - teste</title>
  <script src="/socket.io/socket.io.js"></script>
</head>
<body>
  <h1>Webchat</h1>
  <h2>Digite seu Nickname</h2>
  <input type="text" id="textNickname" placeholder="Insira seu nome aqui">
  <button id="sendNickname">Logar</button>
  
  <h2>Usu√°rios</h2>
  <ul id="displayNickname"> 
  </ul>
  
  <h2>Chitchat</h2>
  <ul id='displayMessage'></ul>
  
  <input type="text" id="textMessage" placeholder="Digite uma nova mensagem aqui">
  <button id="sendMessage">Enviar</button>
  
  <script>
  const socket = io();

  const buttonSendMsg = document.querySelector('#sendMessage');
  const textMessage = document.querySelector('#textMessage');
  const displayMessage = document.querySelector('#displayMessage');
   
  const buttonSendNick = document.querySelector('#sendNickname');   
  const textNickname = document.querySelector('#textNickname');
  const displayNickname =  document.querySelector('#displayNickname');

  buttonSendMsg.addEventListener('click', (event) => {
    event.preventDefault();
    socket.emit('message', textMessage.value);
   })

  buttonSendNick.addEventListener('click', (event) => {
    event.preventDefault();
    socket.emit('nickname', textNickname.value);
   })

  socket.on('toFrontMsg', (messageFromBack) => {
    const msgItem = document.createElement('li');
    msgItem.innerHTML = messageFromBack;
    displayMessage.appendChild(msgItem);
  });

  socket.on('toFrontNick', (nickFromBack) => {
    const nickItem = document.createElement('li');
    nickItem.innerHTML = nickFromBack;
    displayNickname.appendChild(nickItem); 
  })
  </script>
</body>
</html>