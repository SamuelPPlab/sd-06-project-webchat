<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
  <title>Webchat Project</title>
</head>

<body>
  <nav class="navbar navbar-light bg-light">
    <div class="container-fluid p-2" style="background-color: rgba(7, 22, 1, 0.1)">
      <a class="navbar-brand">WebChat Trybe</a>
      <form class="d-flex">
        <input class="form-control me-2" type="text" placeholder="Mensagem" id="message" data-testid="message-box">
        <button class="btn btn-outline-success" type="submit" id="send-button" data-testid="send-button">Enviar</button>
      </form>
    </div>
  </nav>
  
  <div class="container-lg mt-3">
    <div class="row align-items-start">
      <div class="col-4 align-self-start">
        <div class="d-flex">
          <input class="col-6 form-control me-2" id="change-nickname" data-testid="nickname-box">
          <button class="col-6 btn btn-dark" id="change-nickname-button" data-testid="nickname-button">Mudar nome</button>
        </div>

        <ul class="list-group" id="online-users"></ul>
      </div>
      <div class="col-8 align-self-end">
        <ul class="list-group col-12 d-inline-block" id="chat-messages">
          <% messagesToRender.forEach((message) => { %>
            <li
              data-testid="message"
              class="list-group-item list-group-item-info"
            >
              <%= message %>
            </li>
          <% }); %>
        </ul>
      </div>
    </div>
  </div>


  
</body>

<script src="/socket.io/socket.io.js"></script>

<script>
const socket = io();
  let userNickname;
  
  socket.on('connect', () => { 
      userNickname = `user_${Math.random().toString().substr(2, 11)}`;
      socket.emit('sendNickname', { nickname: userNickname });
  })

  socket.on('updateOnlineUsers', (onlineUsers) => {
    const otherUsers =  onlineUsers.filter((user) => user.id !== socket.id);
    const firstUser = onlineUsers.filter((user) => user.id === socket.id);
    const orderedUsers = firstUser.concat(otherUsers);
    userNickname = onlineUsers.find((user) => user.id === socket.id).nickname;
 
    const onlineUsersList = document.querySelector('#online-users');
    while (onlineUsersList.firstChild) onlineUsersList.removeChild(onlineUsersList.lastChild);
    orderedUsers.forEach((user) => {
      const userToRender = document.createElement('li');
      
      userToRender.setAttribute('data-testid', 'online-user');
      // userToRender.setAttribute('class', 'list-group-item list-group-item-secondary');
      userToRender.innerHTML = user.nickname;
      document.querySelector('#online-users').appendChild(userToRender);
    });
  });
  
  socket.on('message', (message) => {
    const messageToRender = document.createElement('li');
    
    messageToRender.setAttribute('data-testid', 'message');
    messageToRender.setAttribute('class', 'list-group-item list-group-item-info');
    messageToRender.innerHTML = message;
    
    document.querySelector('#chat-messages').appendChild(messageToRender);
  });

  document.querySelector('form').addEventListener('submit', (e) => {
    e.preventDefault();
    const chatMessage = document.querySelector('#message').value;
    
    socket.emit('message', { nickname: userNickname, chatMessage });
    document.querySelector('#message').value = '';
  });

  document.querySelector('#change-nickname-button').addEventListener('click', () => {
    const newNickname = document.querySelector('#change-nickname').value;

    userNickname = newNickname;

    document.querySelector('#change-nickname').value = '';
    
    socket.emit('changeNickname', userNickname);
  })
  
</script>
</html>
