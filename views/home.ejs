<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="/socket.io/socket.io.js"></script>
  <title>Socket.io</title>
</head>
<body>
  <div>
    <h2 id="your-user"></h2>
  </div>
  

  <div>
    <h2>Send Message</h2>
    <input type="text" id="message-box" data-testid="message-box">
    <button id="send-button" data-testid="send-button">Send message</button>
  </div>

  <div class="messages">
    <ul id="messages-list">
      <% messages.forEach((message) => { %>
      <li data-testid="message">
        <%= `${message}` %>
      </li>
      <% }) %>
    </ul>
  </div>
  <div>
    <h2>Change Nickname</h2>
    <input type="text" id="nickname-box" data-testid="nickname-box">
    <button id="nickname-button" data-testid="nickname-button">Change nickname</button>
  </div>
  <div>
    <h2>Users Online</h2>
    <ul id="online-users-list"></ul>
  </div>
</body>
<script>
  const socket = io();
  let nickname;
  const userNickEle = document.querySelector('#your-user');
  const msgEle = document.querySelector('#message-box');
  const sendBtn = document.querySelector('#send-button');
  const usersList = document.querySelector('#online-users-list');
  const msgList = document.querySelector('#messages-list');
  const nicknameEle= document.querySelector('#nickname-box');
  const nicknameBtn= document.querySelector('#nickname-button');

  sendBtn.addEventListener('click', () => {
    const chatMessage = msgEle.value;
    nickname = userNickEle.innerHTML;
    msgEle.value = '';
    socket.emit('message', { chatMessage, nickname });
  });

  nicknameBtn.addEventListener('click', () => {
    const newNickname = nicknameEle.value;
    userNickEle.innerText = newNickname;
    nicknameEle.value = '';
    socket.emit('newNickname', newNickname);
  });
  socket.on('message', (message) => {
    const messageLiEle = document.createElement('li');
    messageLiEle.innerHTML = message;
    messageLiEle.setAttribute('data-testid', 'message');
    msgList.appendChild(messageLiEle);
  });

  socket.on('updateUsers', (users) => {
    const newUser = users.find((user) => user.id === socket.id);
    const userIndex = users.findIndex((user) => user === newUser);
    users.splice(userIndex, 1);
    users.unshift(newUser);
    usersList.innerHTML = '';
    users.forEach((user) => {
      const userLi = document.createElement('li');
      userLi.innerHTML = user.nickname;
      userLi.setAttribute('data-testid', 'online-user');
      usersList.appendChild(userLi);
    });

  })

  socket.on('connect', () => {
    nickname = socket.id.slice(0, 16);
    socket.emit('newUser', nickname);
    userNickEle.innerHTML = nickname;
  })
</script>
</html>