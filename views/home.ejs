<html lang="pt-br">
  <head>
    <meta charset="UTF-8">
    <!-- <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0"> -->
    <title>Document</title>
    <script src='http://localhost:3000/socket.io/socket.io.js'></script>
  </head>
  <body>
    <h1>Chat do Guga</h1>
    <h2>
      Usu√°rios conectados:
      <ul id="usuarios-connected">
        <li id="online-user" data-testid="online-user"></li>
      </ul>
    </h2>
    <div id="nickname-container">
      <input
        id="nickname"
        data-testid="nickname-box"
        type="text"
        name="nickname"
        placeholder="Digite seu nickname"
      />
      <button
        id="save-nickname"
        data-testid="nickname-button"
        type="button"
      >
        Salvar
      </button>
    </div>
    <div id="chat-container">
      <input
        id="msg"
        data-testid="message-box"
        type="text"
        name="msg"
        placeholder="Digite sua mensagem"
      />
      <button
        id="send-btn"
        data-testid="send-button"
        type="button"
      >
        Enviar
      </button>
      <div>
        <ul
          id="messages"
        >
          <% allMessages.forEach((message) => { %>
            <li data-testid="message"><%= `${message.timestamp} - ${message.nickname}: ${message.message}` %></li>
          <% }) %>
        </ul>
      </div>
    </div>
    <button id='logout-btn'>Sair</button>

    <!-- <script src='./client.js'></script> -->
    <script>
      const socket = window.io('http://localhost:3000/');
      let nickname = '<%= nickname %>';
      const allMessages = '<%= allMessages %>';
      const onlineUser = () => document.querySelector('#online-user');
      const logoutButton = document.querySelector('#logout-btn');
      const sendButton = document.querySelector('#send-btn');
      const messageInput = document.querySelector('#msg');
      const messageRender = document.querySelector('#messages');
      const saveNickname = document.querySelector('#save-nickname');
      // const newNickname = document.querySelector('#nickname');
      const usuarios = document.querySelector('#usuarios-connected');
      
      const newNickname = () => document.querySelector('#nickname');
      
      const renderNickname = (name) => {
        onlineUser().innerHTML = name;
      }
      renderNickname(nickname);

      socket.emit('userConnected', nickname);
      socket.on('usersConnected', (data) => {
        const valores = Object.entries(data);
        const names = valores.map((item) => item[1]);
        const myNickname = names.filter((name) => name === nickname);
        const nameWithoutUser = names.filter((name) => name !== nickname);
        usuarios.innerHTML = '';
        const li = document.createElement('li');
        li.setAttribute('data-testid', 'online-user');
        li.innerHTML = myNickname;
        usuarios.appendChild(li);

        nameWithoutUser.forEach((name) => {
          const li = document.createElement('li');
          li.innerHTML = name;
          li.setAttribute('data-testid', 'online-user');
          usuarios.appendChild(li);
        });
      });
      socket.on('message', (data) => {
        const li = document.createElement('li');
        li.setAttribute('data-testid', 'message');
        li.innerHTML = data;
        messageRender.appendChild(li);
      });

      logoutButton.addEventListener('click', () => {
        socket.disconnect();
      });

      saveNickname.addEventListener('click', () => {
        nickname = newNickname().value;
        socket.emit('userConnected', nickname);
      });

      sendButton.addEventListener('click', async () => {
        const chatMessage = messageInput.value;
        socket.emit('message', { nickname, chatMessage });
      });

      window.onbeforeunload = () => {
        socket.disconnect();
        // return false;
      };
    </script>
  </body>
</html>