<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Web-Chat</title>
</head>

<body>

  <!-- USER LOGGED -->
  <div>
    <h1 id="current-user"></h1>
    <input id="nick-input" data-testid="nickname-box" type="text">
    <button id="send-nick"  data-testid="nickname-button">Send</button>
  </div>

  <!-- LIST OF ONLINE USERS -->
  <div>
    <h2>Online users</h2>
    <ul id='online-users-ul'></ul>
  </div>

  <!-- MESSAGE BOX -->
  <div>
    <input data-testid="message-box" id="message-box" type="text">
    <button data-testid="send-button" id="send-message">Send</button>
  </div>

  <!-- CHAT BOX -->
  <div>
    <h2>Chat</h2>
    <ul id="chat-box">
      <% allMessages.forEach((message) => { %>
        <li data-testid="message">
            <%= `${message.timestamp} ${message.nickname} ${message.message}` %>
        </li>
      <% }) %>
    </ul>
  </div>

  <script>
    const socket = io();
    let nickname = '';

    const ZERO = 0;
    const ONE = 1;
    const NICKNAME_SIZE = 16;

    const currentUser = document.getElementById('current-user');
    const onlineUsersUl = document.getElementById('online-users-ul');
    const messageBox = document.getElementById('message-box');
    const sendMessageBtn = document.getElementById('send-message');
    const chatBoxUl = document.getElementById('chat-box');
    const nickInput = document.getElementById('nick-input');
    const sendNickBtn = document.getElementById('send-nick');

    sendMessageBtn.addEventListener('click', () => {
      const message = messageBox.value;
      socket.emit('message', { chatMessage: message, nickname });
    });

    sendNickBtn.addEventListener('click', () => {
      const newNickname = nickInput.value;
      nickname = newNickname;
      currentUser.innerHTML = nickname;
      socket.emit('newNickname', nickname);
    });

    socket.on('connect', () => {
      nickname = (socket.id).slice(ZERO, NICKNAME_SIZE);
      socket.emit('newUser', nickname);
      currentUser.innerHTML = nickname;
    });

    socket.on('updateUsers', (users) => {
      const userLogged = users.find((user) => user.id === socket.id);
      const userIndex = users.findIndex((user) => user === userLogged);
      users.splice(userIndex, ONE, userLogged);

      onlineUsersUl.innerHTML = '';
      users.forEach((user) => {
        const li = document.createElement('li');
        li.innerHTML = user.nickname;
        li.setAttribute('data-testid', 'online-user');
        onlineUsersUl.appendChild(li);
      });
    });

    socket.on('message', (message) => {
      const li = document.createElement('li');
      li.innerHTML = message;
      li.setAttribute('data-testid', 'message');
      chatBoxUl.appendChild(li);
    });

  </script>
</body>

</html>