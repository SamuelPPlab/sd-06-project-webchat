<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="/socket.io/socket.io.js"></script>
  <title>Document</title>
</head>
<body>
  <header style="text-align: center;">
    <h1>El chat del Magic</h1>
  </header>
  <main>
    <div style="display: flex;">
      <div>
        <form>
          <input type="text" id="input-name" data-testid="nickname-box"/>
          <button type="button" id="change-name" data-testid="nickname-button">Mudar de nome</button>
        </form>
        <h3 data-testid="online-user" id="username"></h3>
        <ul id="users-screen"></ul>
      </div>
      <ul id="msg-screen"></ul>
    </div>
    <form style="position: fixed; bottom: 10px; margin: 30px; width: 90%;">
      <input
        type="text"
        id="input-msg"
        data-testid="message-box"
        style="width: 80%;"
      />
      <button type="button" id="send-msg" data-testid="send-button">Enviar</button>
    </form>
  </main>
  <script>
    const socket = io();
    const msgInput = document.querySelector('#input-msg');
    const nameInput = document.querySelector('#input-name');
    const username = document.querySelector('#username');
    const printMessage = (chatMessage) => {
      const msgScreen = document.querySelector('#msg-screen');
      const newMsg = document.createElement('li');
      newMsg.innerText = chatMessage;
      newMsg.setAttribute('data-testid', 'message')
      msgScreen.appendChild(newMsg);
    };
    const printHistoryMessage = ({ timestamp, message, nickname }) => {
      const formattedMessage = `${timestamp} - ${nickname}: ${message}`;
      const msgScreen = document.querySelector('#msg-screen');
      const newMsg = document.createElement('li');
      newMsg.innerText = formattedMessage;
      newMsg.setAttribute('data-testid', 'message')
      msgScreen.appendChild(newMsg);
    };
    const printUsersList = (userName) => {
      const usersScreen = document.querySelector('#users-screen');
      const nickname = localStorage.getItem('nickname');
      if (userName !== nickname) {
        const user = document.createElement('li');
        user.innerText = userName;
        user.setAttribute('data-testid', 'online-user')
        usersScreen.appendChild(user);
      }
    }

    const changeName = (newName) => {
      localStorage.setItem('nickname', newName);
      username.innerText = `${newName}`;
    }

    socket.on('randomName', ({ userName }) => changeName(userName));
    socket.on('historyMessages', ({ history }) => {
      history.forEach((message) => printHistoryMessage(message));
    });
    socket.on('usersList', ({ connectedList }) => {
      const usersScreen = document.querySelector('#users-screen');
      usersScreen.innerHTML = '';
      connectedList.forEach((user) => printUsersList(user));
    });

    document.querySelector('#send-msg').addEventListener('click', (e) => {
      e.preventDefault();
      const chatMessage = msgInput.value;
      const nickname = localStorage.getItem('nickname');
      socket.emit('message', { nickname, chatMessage });
      msgInput.value = '';
    });

    document.querySelector('#change-name').addEventListener('click', (e) => {
      e.preventDefault();
      const newUserName = nameInput.value;
      const nickname = localStorage.getItem('nickname');
      socket.emit('nameChange', { oldName: nickname, newName: newUserName });
      changeName(newUserName);
    });

    socket.on('message', (message) => {
      printMessage(message);
    } )
  </script>
</body>
</html>