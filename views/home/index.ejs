<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="css/style.css" >
  <title>WebChat</title>
</head>
<body>
  <ul id="online-user">
    <% users.forEach((user) => {%>
    <li data-testid="online-user"><%=`${user.nickname}`%></li>
    <%})%>
  </ul>
  <div class="username-div">
    <form>
      <input data-testid="nickname-box" id="nickname-input" placeholder="username" />
      <button type="submit" id="button-nickname" data-testid="nickname-button">Salvar</button>
    </form>
  </div>
  <div class="messages">
    <ul id="message-list">
      <% messages.forEach((message) => {
        %>
        <li data-testid="message"><%=`${message.timestamp} ${message.nickname} ${message.message}`%></li>
        <%})%>
    </ul>
  </div>
  <div class="input-message-div">
    <form id="formTag" action="">
      <input data-testid="message-box" id="message-input" placeholder="Digite sua mensagem" />
      <button type="submit" id="button-message" data-testid="send-button">Enviar</button>
    </form>
  </div>
<!--   <div>
    <ul>
      <% users.forEach((user) => {
        %>
        <li><%=`${user.nickname}`%></li>
        <%})%>
    </ul>
  </div> -->
  <script src="http://localhost:3000/socket.io/socket.io.js"></script>
  <script>
    const socket = io('http://localhost:3000');

    const sendMessage = document.querySelector('#button-message');
    const saveNickname = document.querySelector('#button-nickname');
    const inputMessage = document.querySelector('#message-input');
    const inputNickname = document.querySelector('#nickname-input');
    const messageUl = document.querySelector('#message-list');
    const onlineUser = document.querySelector('#online-user');
    let currentUser;

    // Recebe do backend um array com os usuários conectados
    socket.on('connectedUsers', (users) => {
      // console.log('array users', users);
      currentUser = users.filter(user => user.id === socket.id);
      console.log('linha 66', users);
      createUserList(users);
    });

    // Recebe do backend um objeto contendo os dados do user para renderizar a msg
    socket.on('message', (message) => createMessage(message));

    const createUser = (user) => {
      const li = document.createElement('li');
      li.setAttribute('data-testid', 'online-user');
      li.innerText = user.nickname;
      onlineUser.appendChild(li);
    }

    const createUserList = (arrayUsers) => {
      onlineUser.innerHTML = '';
      console.log('usuario corrente l90', currentUser[0].id);
      createUser(currentUser[0]);
      arrayUsers
        .filter(user => user.id !== socket.id)
        .forEach((user) => {
        createUser(user);
        });
    }
    // socket.on('updateNickname', (users) => createUserList(users));

    saveNickname.addEventListener('click', (e) => {
      e.preventDefault();
      const newNickname = inputNickname.value;
      currentUser[0].nickname = newNickname
      socket.emit('updateNickname', currentUser);
      inputNickname.value = "";
      return;
    });

    sendMessage.addEventListener('click', (e) => {
      e.preventDefault();
      let chatMessage = inputMessage.value;
      console.log('usuário corrente', currentUser);
      const [{ nickname }] = currentUser;
      console.log('linha 110', currentUser);
    
      socket.emit('message', { chatMessage, nickname });
      inputMessage.value = '';
      return;
    });

    const createMessage = (message) => {
      const li = document.createElement('li');
      li.setAttribute('data-testid', 'message');
      li.innerText = message;
      messageUl.appendChild(li);
    }

  </script>
</body>
</html>