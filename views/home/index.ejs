<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="/assets/css/style.css" >
  <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/3.0.4/socket.io.js"></script>
  <title>WebChat</title>
</head>
<body>
  <ul data-testid="online-user" id="online-user"></ul>
  <div class="username-div">
    <form>
      <input data-testid="nickname-box" id="nickname-input" placeholder="username" />
      <button type="submit" id="button-nickname" data-testid="nickname-button">Salvar</button>
    </form>
  </div>
  <div class="users">
    <ul class="ul-container"></ul>
  </div>
  <div class="messages">
    <ul id="message-list">
      <% messages.forEach((message) => {
        %>
        <li data-testid="message"><%=`${message.timestamp} ${message.nickname} ${message.message}`%></li>
        <%})%>
    </ul>
  </div>
  <div class="input-message-div">
    <form id="formTag" action="">
      <input data-testid="message-box" id="message-input" placeholder="Digite sua mensagem" />
      <button type="submit" id="button-message" data-testid="send-button">Enviar</button>
    </form>
  </div>
  <script>
    const socket = io('http://localhost:3000');

    const sendMessage = document.querySelector('#button-message');
    const saveNickname = document.querySelector('#button-nickname');
    const inputMessage = document.querySelector('#message-input');
    const inputNickname = document.querySelector('#nickname-input');
    const messageUl = document.querySelector('#message-list');
    const onlineUser = document.querySelector('#online-user');

/*     socket.on('connect', () => {
      let nickname = generateRandomNickname(16);
      io.emit('user', nickname);
    })
 */

    const generateRandomNickname = (length) => {
      const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
      let str = '';
      for (let i = 0; i < length; i ++) {
        str += characters.charAt(Math.floor(Math.random() * characters.length));
      }
      return str;
    }

/*     const createUserList = (arr) => {
      const li = document.createElement('li');

      arr.map((user) => {
        li.innerText = user;
        onlineUser.appendChild(li);
      });
    } */

    const createUser = () => {
      const li = document.createElement('li');
      li.setAttribute('id', 'user-nickname');
      let newUser = generateRandomNickname(16);

      socket.emit('user', newUser);
      li.innerText = newUser;
      onlineUser.appendChild(li);
    }

    saveNickname.addEventListener('click', (e) => {
      e.preventDefault();
      let userNickname = inputNickname.value;
      // io.on('user', (arrayUser) => createUserList(arrayUser));
      let li = document.querySelector('#user-nickname');
      localStorage.setItem('currentUser', userNickname);
      socket.emit('updateNickname', userNickname);
      li.innerText = userNickname;
      inputNickname.value = "";
      return;
    });

    sendMessage.addEventListener('click', (e) => {
      e.preventDefault();
      let chatMessage = inputMessage.value;
      const nickname = localStorage.getItem('currentUser');
      socket.emit('message', { chatMessage, nickname });
      inputMessage.value = '';
      return;
    });

    const createMessage = (message) => {
      const li = document.createElement('li');
      li.setAttribute('data-testid', 'message');
      li.innerText = message;
      messageUl.appendChild(li);
    }
    socket.on('message', (objUser) => createMessage(objUser));

    window.onload = createUser;
  </script>
</body>
</html>