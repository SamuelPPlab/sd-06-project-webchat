<!DOCTYPE html>
<html>
  <head>
    <title>PÃ¡gina SocketIO</title>
    <style></style>
    <script src="socket.io/socket.io.js"></script>
  </head>
  <body>
    <ul id="users"></ul>
    <form action="" id="nicknameForm">
      <input data-testid="nickname-box" id="changeNick" placeholder="Insira seu Nick" /><button data-testid="nickname-button">Salvar Nick</button>
    </form>
    <ul id="messages">
      <% messages.forEach((msg) => { %>
        <li data-testid="message"><%= `${msg.timestamp} ${msg.nickname} ${msg.message}` %></li>
      <% }) %>
    </ul>
    <form action="" id="messageForm">
      <input data-testid="message-box" id="newMessage" placeholder="Digite uma nova msg aqui" /><button data-testid="send-button">Enviar MSG</button>
    </form>
    <script>
      const socket = io();
      const newMessage = document.querySelector('#newMessage');
      let inicialUser;
      const generateNick = () => {
        const length = 16;
        const randomChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
        let result = '';
        for (let i = 0; i < length; i += 1) {
          result += randomChars.charAt(Math.floor(Math.random() * randomChars.length));
        }
        return result;
      };

      document.querySelector('#nicknameForm').addEventListener('submit', (elem) => {
        elem.preventDefault();
        inicialUser.nickname = document.querySelector('#changeNick').value;
        console.log(inicialUser);
        socket.emit('updatedUser', inicialUser);
      })
      
      document.querySelector('#messageForm').addEventListener('submit', (elem) =>{
        elem.preventDefault();
        const { nickname } = inicialUser;
        socket.emit('message', { nickname, chatMessage: newMessage.value });
        newMessage.value = '';
        return false;
      });
      
      const createMessage = (message) => {
        const messagesList = document.querySelector('#messages');
        const li = document.createElement('li');
        li.innerText = message;
        li.setAttribute('data-testid', 'message');
        messagesList.appendChild(li);
      }
      
      const createLiUser = (user) => {
        const userList = document.querySelector('#users');
        const li = document.createElement('li');
        li.innerText = user.nickname;
        li.setAttribute('data-testid', 'online-user');
        userList.appendChild(li);
      }

      const listUsers = (users) => {
        const userList = document.querySelector('#users');
        userList.innerHTML = '';
        createLiUser(inicialUser);
        users.filter(user => user.id !== inicialUser.id).forEach(user => createLiUser(user));
      }

      socket.on('connect', () => {
        const nickname = generateNick();
        inicialUser = { nickname };
        socket.emit('userLogin', nickname);
      });
      
      socket.on('usersConnected', (users) => {
        inicialUser = users.find(user => user.nickname === inicialUser.nickname);
        listUsers(users);
      })

      socket.on('message', (message) => createMessage(message));
    </script>
  </body>
</html>