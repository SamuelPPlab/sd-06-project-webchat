<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Web Chat</title>
  <script src="/socket.io/socket.io.js"></script>
</head>

<body>
  <input type="text" id="messageInput" data-testid="message-box">
  <button type="button" id="buttonSend" data-testid="send-button">Enviar mensagem</button>
  <input type="text" id="nicknameInput" data-testid="nickname-box">
  <button type="button" id="buttonNickname" data-testid="nickname-button">Mudar nickname</button>
  <ul id="nicknameList"></ul>
  <ul id="messages"></ul>
  <script>
    const socket = io();

    let nickname = '';
    socket.on('connected', (stringNickname) => {
      nickname = stringNickname;
      addNickname(stringNickname);
    });

    socket.on('userConnected', ({ stringNickname, users }) => {
      nickname = stringNickname;
      addUsersConnected(users);
      // addNicknameToBeginning(stringNickname);
    });

    const button = document.querySelector('#buttonSend');

    button.addEventListener('click', () => {
      const inputMessage = document.querySelector('#messageInput');
      socket.emit('message', { chatMessage: inputMessage.value, nickname });
      inputMessage.value = '';
      return false;
    });

    const addNickname = (nickname) => {
      const listNickname = document.querySelector('#nicknameList');
      const li = document.createElement('li');
      li.setAttribute('data-testid', 'online-user');
      li.innerText = nickname;
      listNickname.prepend(li);
    }

    const addNicknameToBeginning = (nickname) => {
      const listNickname = document.querySelector('#nicknameList');
      const li = document.createElement('li');
      li.setAttribute('data-testid', 'online-user');
      li.innerText = nickname;
      listNickname.appendChild(li);
    }

    const createMessage = (response) => {
      const messagesUl = document.querySelector('#messages');
      const li = document.createElement('li');
      li.setAttribute('data-testid', 'message');
      li.innerText = response;
      messagesUl.appendChild(li);
    }

    socket.on('message', (message) => createMessage(message));

    const buttonNickname = document.querySelector('#buttonNickname');

    buttonNickname.addEventListener('click', () => {
      const newNickname = document.querySelector('#nicknameInput');
      socket.emit('changeNickname', { newNickname: newNickname.value });
      nickname = newNickname.value;
      newNickname.value = '';
    });

    const changeNickname = (users) => {
      const listNickname = document.querySelector('#nicknameList');
      listNickname.innerHTML = '';
      users.forEach((user) => {
        const li = document.createElement('li');
        li.setAttribute('data-testid', 'online-user');
        li.innerText = user.nickname;
        listNickname.appendChild(li);
      })
    }

    const addUsersConnected = (users) => {
      const listNickname = document.querySelector('#nicknameList');
      users.forEach((user) => {
        const li = document.createElement('li');
        li.setAttribute('data-testid', 'online-user');
        li.innerText = user.nickname;
        listNickname.appendChild(li);
      })
    }

    socket.on('changeNickname', (users) => changeNickname(users));

    window.onload = async () => {
      const messages = await fetch('http://localhost:3000/getmessages', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json'
        },
      }).then((res) => res.json());
      const messagesUl = document.querySelector('#messages');
      messages.forEach((message) => {
        const li = document.createElement('li');
        li.setAttribute('data-testid', 'message');
        li.innerText = `${message.timestamp} ${message.nickname} ${message.message}`;
        messagesUl.appendChild(li);
      });
    }

      const disconnect = (users) => {
        const listNickname = document.querySelector('#nicknameList');
        users.forEach((user) => {
          const li = document.createElement('li');
          li.setAttribute('data-testid', 'online-user');
          li.innerText = user.nickname;
          listNickname.appendChild(li);
        })
      }

      socket.on('disconnected', (users) => disconnected(users));
  </script>
</body>

</html>