<!DOCTYPE html>
<html>

<head>
  <title>Socket.IO</title>
  <script src="/socket.io/socket.io.js"></script>
</head>

<body>
  <ul id="mensagens">
    <% msgs.forEach((message) => { %>
      <li data-testid="message">
        <%= message.timestamp %>
        <%= message.nickname %>
        <%= message.chatMessage %>
      </li>
    <% }) %>
  </ul>
  <ul id="usuarios">
    <% users.forEach((user) => { %>
      <li data-testid="online-user" id="<%= user.id %>">
        <%= user.nickname %>
      </li>
    <% }) %>
  </ul>
  <form action="" id="nicknameForm">
    <input data-testid="nickname-box" id="nicknameInput" autocomplete="off" />
    <button data-testid="nickname-button">Send</button>
  </form>
  <form action="" id="messageForm">
    <input data-testid="message-box" id="messageInput" autocomplete="off" />
    <button data-testid="send-button">Send</button>
  </form>
  <script>
    const socket = io();
    const nicknameForm = document.querySelector('#nicknameForm');
    const messageForm = document.querySelector('#messageForm');
    let nickname = '';
    const inputNickname = document.querySelector('#nicknameInput');
    const inputMessage = document.querySelector('#messageInput');
    messageForm.addEventListener('submit', (e) => {
      e.preventDefault();
      socket.emit('message', {
        nickname: nickname,
        chatMessage: inputMessage.value,
      });
      inputMessage.value = '';
      return false;
    });
    nicknameForm.addEventListener('submit', (e) => {
      e.preventDefault();
      nickname = inputNickname.value;
      socket.emit('updateUser', nickname);
      inputNickname.value = '';
      return false;
    });
    const createMessage = (message) => {
      const messagesUl = document.querySelector('#mensagens');
      const li = document.createElement('li');
      li.innerText = message;
      li.setAttribute("data-testid", "message");
      messagesUl.appendChild(li);
    };
    
    // codigo para requisito 4 consultado no PR#70 Isabela Rosa
    // https://github.com/tryber/sd-06-project-webchat/blob/isabela-rosa-webchat/views/home.ejs

    const addNewUser = (users) => {
      const usersUl = document.querySelector('#usuarios');
      usersUl.innerHTML = '';
      const ultimoElem = users.find((user) => user.id === socket.id);
      let newArray = users.filter((elem) => elem.id !== socket.id);
      newArray = [ultimoElem, ...newArray];
      newArray.forEach(element => {
        const li = document.createElement('li');
        li.innerHTML = element.nickname;
        li.setAttribute("data-testid", "online-user");
        li.setAttribute("id", element.id);
        usersUl.appendChild(li);
      });
      };
    socket.on('message', (objeto) => {
      createMessage(objeto)
    });
    socket.emit('newUser');
    socket.on('nickname', (users) => {
      addNewUser(users);
    });
    socket.on('updateUser', (user) => {
      const id = user.id;
      const li = document.getElementById(id);
      li.innerHTML = user.nickname;
    })
  </script>
</body>

</html>
